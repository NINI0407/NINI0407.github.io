{"meta":{"title":"妮之上學日記","subtitle":"","description":"","author":"ShinNi Lu","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2025-05-05T10:55:39.150Z","updated":"2025-05-05T10:55:39.150Z","comments":true,"path":"custom.css","permalink":"http://example.com/custom.css","excerpt":"","text":"body { /* 網頁背景 */ background-image: url(\"https://i.imgur.com/ly2V7Za.jpeg\"); background-size: cover; background-repeat: no-repeat; background-attachment: fixed; background-position: center center; }"},{"title":"tags","date":"2025-05-03T15:57:36.000Z","updated":"2025-05-03T15:57:52.075Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2025-05-03T15:02:16.000Z","updated":"2025-05-03T15:56:01.654Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"uva_10038：Jolly Jumpers","slug":"uva-10038","date":"2025-05-16T07:36:49.000Z","updated":"2025-05-16T07:41:15.996Z","comments":true,"path":"2025/05/16/uva-10038/","permalink":"http://example.com/2025/05/16/uva-10038/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目uDebug 題目說明Time limit: 3.000 seconds 題目有n個整數的序列我們稱為jolly jumper，如果相鄰的2個數其差的絕對值恰好為1到n-1。例如： 1 4 2 3 就是jolly jumper（n&#x3D;4）。因為相鄰2數的差的絕對值為3,2,1，就是1到n-1。但是 1 4 2 -1 6 不是jolly jumper（n&#x3D;5）。因為相鄰2數的差的絕對值為3,2,3,7，並非1到n-1。 你的任務是寫一個程式來判斷一個整數序列是否為jolly jumper。 Input每組測試資料一列，第一個正整數為 n（n &lt; 3000），代表此整數序列的長度。接下來有n個整數，代表此整數序列。請參考Sample Input。 Output對每一組測試資料，輸出此整數序列是否為jolly jumper。請參考Sample Output。 Sample Input124 1 4 2 35 1 4 2 -1 6 Sample Output12JollyNot jolly 解題說明只要所有相鄰數的差恰好是1 ~ n-1就可以了，不一定要照順序、可以重複 java程式碼12345678910111213141516171819202122232425262728293031323334353637383940import java.util.*;public class Main&#123; public static void main(String[] args)&#123; Scanner in = new Scanner(System.in); while(in.hasNextInt())&#123; //讀入數字陣列 int n = in.nextInt(); int[] nums = new int[n]; for(int i=0; i&lt;n; i++)&#123; nums[i] = in.nextInt(); &#125; //計算相鄰數字差 int[] difference = new int[n]; for(int i=0; i&lt;n-1; i++)&#123; int d = Math.abs(nums[i] - nums[i+1]); if(d&gt;=1 &amp;&amp; d&lt;=n-1)&#123; difference[d] = 1; &#125; &#125; //判斷是否jolly int k; for(k=1; k&lt;n; k++)&#123; if(difference[k] == 0) &#123; System.out.println(&quot;Not jolly&quot;); break; &#125; &#125; if(k == n)&#123; System.out.println(&quot;Jolly&quot;); &#125; &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"}]},{"title":"uva_1008：What's Cryptanalysis?","slug":"uva-1008","date":"2025-05-15T16:11:28.000Z","updated":"2025-05-15T16:26:47.813Z","comments":true,"path":"2025/05/16/uva-1008/","permalink":"http://example.com/2025/05/16/uva-1008/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目 題目說明Time limit: 3.000 seconds 題目Cryptanalysis is the process of breaking someone else’s cryptographic writing. This sometimes involvessome kind of statistical analysis of a passage of (encrypted) text. Your task is to write a program whichperforms a simple analysis of a given text. InputThe first line of input contains a single positive decimal integer n. This is the number of lines whichfollow in the input. The next n lines will contain zero or more characters (possibly including whitespace).This is the text which must be analyzed. OutputEach line of output contains a single uppercase letter, followed by a single space, then followed by apositive decimal integer. The integer indicates how many times the corresponding letter appears inthe input text. Upper and lower case letters in the input are to be considered the same. No othercharacters must be counted. The output must be sorted in descending count order; that is, the mostfrequent letter is on the first output line, and the last line of output indicates the least frequent letter.If two letters have the same frequency, then the letter which comes first in the alphabet must appearfirst in the output. If a letter does not appear in the text, then that letter must not appear in theoutput. Sample Input123453This is a test.Count me 1 2 3 4 5.Wow!!!! Is this question easy? Sample Output1234567891011121314S 7T 6I 5E 4O 3A 2H 2N 2U 2W 2C 1M 1Q 1Y 1 解題說明程式碼大致分成兩個部分1.用map儲存字母及對應出現次數2.將map轉乘ArrayList，修改sort中的comparator改成由大到小排序並輸出即可 map java程式碼1234567891011121314151617181920212223242526272829303132333435363738import java.util.*;public class Main &#123; public static void main(String[] args) &#123; Scanner in = new Scanner(System.in); Map&lt;Character, Integer&gt; count = new HashMap&lt;&gt;(); int lines = in.nextInt(); in.nextLine(); for(int j=0; j&lt;lines; j++) &#123; String str = in.nextLine(); str = str.toUpperCase(); for (int i = 0; i &lt; str.length(); i++) &#123; Character c = str.charAt(i); if (Character.isLetter(c)) &#123; if (!count.containsKey(c)) &#123; // first met count.put(c, 1); &#125; else &#123; count.put(c, count.get(c) + 1); &#125; &#125; &#125; &#125; ArrayList&lt;Map.Entry&lt;Character, Integer&gt;&gt; tmp = new ArrayList&lt;&gt;(count.entrySet()); tmp.sort(Comparator.comparing(Map.Entry&lt;Character, Integer&gt;::getValue).reversed()); for (Map.Entry&lt;Character, Integer&gt; t : tmp) &#123; System.out.println(t.getKey() + &quot; &quot; + t.getValue()); &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"}]},{"title":"uva_245：Uncompress","slug":"uva-245","date":"2025-05-14T16:33:31.000Z","updated":"2025-05-14T17:03:51.351Z","comments":true,"path":"2025/05/15/uva-245/","permalink":"http://example.com/2025/05/15/uva-245/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目uDebug 題目說明Time limit: 3.000 seconds 題目如果想要壓縮不包含數字字元的文件，可以用一個簡單的方法。此壓縮方法需要列出未壓縮文件中的單詞list。在未壓縮文件中遇到非字母字符時，會將其直接複製到壓縮文件中。在未壓縮文件中遇到單詞時，如果該單詞為首次出現，將其直接複製到壓縮文件中，此情況下，單詞會放在list的最前面。如果不是第一次出現，則不會將該單詞複製到壓縮文件中。而是將其在list中的位置複製到壓縮文件中，並將單詞移到list的開頭。list位置的編號從1開始。請你寫一個程式，將壓縮文件作為輸入，並且輸出原始文件。 Input輸入為多行，在壓縮文件中，沒有單詞超過50個字元，並且原始文件不包含數字字元。單詞區分大小寫，單詞”abc”和單詞”Abc”不同。另外，”x-ray”包含兩個單詞”x”、”ray”。“Mary’s”包含兩個單詞”Mary”、”s”。“It’s a winner”包含四個單詞”It”、”s”、”a”、”winner”。文件中不同單詞的數量沒有上限。如果該行只有一個”0”代表輸入結束(不用處理此行) Output請輸出原始文件。 Sample Input123456789Dear Sally, Please, please do it--1 would 4Mary very, 1 much. And 4 68 everything in 5&#x27;s power to make14 pay off for you. -- Thank 2 18 18--0 Sample Output12345678Dear Sally, Please, please do it--it would pleaseMary very, very much. And Mary woulddo everything in Mary&#x27;s power to makeit pay off for you. -- Thank you very much-- 解題說明輸入的內容可分為英文單字、數字、標點符號與空格，將英文單字加到字典中，遇到數字時查字典index並移動即可。 ArrayList/LinkedList java程式碼1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556import java.util.*;public class Main &#123; public static void main(String[] args) &#123; Scanner in = new Scanner(System.in); LinkedList&lt;String&gt; dictionary = new LinkedList&lt;String&gt;(); String str = &quot;&quot;; String tmp = &quot;&quot;; while (in.hasNextLine()) &#123; str = in.nextLine(); for (int i = 0; i &lt; str.length();) &#123; char c = str.charAt(i); if(c == &#x27;0&#x27;)&#123; return; &#125; if (!Character.isDigit(c)) &#123;// 不是數字直接輸出並加到字典 System.out.print(c); if (Character.isLetter(c)) &#123; tmp += c; &#125; else if(tmp.length() != 0) &#123; dictionary.addFirst(tmp); tmp = &quot;&quot;; &#125; if (i == str.length() - 1 &amp;&amp; tmp.length()!=0) &#123; dictionary.addFirst(tmp); tmp = &quot;&quot;; &#125; i++; &#125; else &#123; // 是數字 int index = 0; while (i&lt;str.length() &amp;&amp; Character.isDigit(str.charAt(i))) &#123; index = index * 10 + (str.charAt(i++) - &#x27;0&#x27;); &#125; index--; System.out.print(dictionary.get(index)); String remove = dictionary.get(index); dictionary.remove(index); dictionary.addFirst(remove); &#125; &#125; System.out.println(); &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐⭐","slug":"⭐⭐","permalink":"http://example.com/tags/%E2%AD%90%E2%AD%90/"}]},{"title":"hexo_web_structure","slug":"hexo-web-structure","date":"2025-05-07T08:04:03.000Z","updated":"2025-05-07T08:04:03.522Z","comments":true,"path":"2025/05/07/hexo-web-structure/","permalink":"http://example.com/2025/05/07/hexo-web-structure/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"uva_151：Power Crisis","slug":"uva-151","date":"2025-05-07T02:17:13.000Z","updated":"2025-05-15T16:23:44.814Z","comments":true,"path":"2025/05/07/uva-151/","permalink":"http://example.com/2025/05/07/uva-151/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目uDebug 題目說明Time limit: 3.000 seconds 題目During the power crisis in New Zealand this winter (caused by a shortage of rain and hence low levelsin the hydro dams), a contingency scheme was developed to turn off the power to areas of the countryin a systematic, totally fair, manner. The country was divided up into N regions (Auckland was regionnumber 1, and Wellington number 13). A number, m, would be picked ‘at random’, and the power wouldfirst be turned off in region 1 (clearly the fairest starting point) and then in every m’th region after that,wrapping around to 1 after N, and ignoring regions already turned off. For example, if N &#x3D; 17 andm &#x3D; 5, power would be turned off to the regions in the order:1,6,11,16,5,12,2,9,17,10,4,15,14,3,8,13,7.The problem is that it is clearly fairest to turn off Wellington last (after all, that is where theElectricity headquarters are), so for a given N, the ‘random’ number m needs to be carefully chosen sothat region 13 is the last region selected.Write a program that will read in the number of regions and then determine the smallest number mthat will ensure that Wellington (region 13) can function while the rest of the country is blacked out. InputInput will consist of a series of lines, each line containing the number of regions (N) with 13 ≤ N &lt; 100.The file will be terminated by a line consisting of a single ‘0’. OutputOutput will consist of a series of lines, one for each line of the input. Each line will consist of thenumber m according to the above scheme. Sample Input12170 Sample Output17 解題說明此題可用Josephus Problem解，外層for迴圈嘗試不同的 m ，每次的 m 會利用Josephus Problem公式找出最後一個被關掉的編號，若是11(因為index從零開始且第一個一定會先被關掉所以13-2)，則印出 m 。 Josephus Problem java程式碼12345678910111213141516171819202122232425262728293031import java.util.*;public class Main&#123; public static void main(String[] args)&#123; Scanner in = new Scanner(System.in); int n = in.nextInt(); int k; while(n != 0)&#123; if(n == 13)&#123; System.out.println(&quot;1&quot;); &#125; else&#123; for(int i=1; i&lt;n; i++)&#123; k=0; for(int j=1; j&lt;n; j++)&#123; k = (k + i) % j; &#125; if(k == 11)&#123; System.out.println(i); &#125; &#125; &#125; n = in.nextInt(); &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐⭐","slug":"⭐⭐","permalink":"http://example.com/tags/%E2%AD%90%E2%AD%90/"}]},{"title":"uva_490：Rotating Sentences","slug":"uva-490","date":"2025-05-05T14:40:47.000Z","updated":"2025-05-05T14:58:17.469Z","comments":true,"path":"2025/05/05/uva-490/","permalink":"http://example.com/2025/05/05/uva-490/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目uDebug 題目說明Time limit: 3.000 seconds 題目In “Rotating Sentences,” you are asked to rotate a series of input sentences 90 degrees clockwise. So instead of displaying the input sentences from left to right and top to bottom, your program will display them from top to bottom and right to left. InputAs input to your program, you will be given a maximum of 100 sentences, each not exceeding 100characters long. Legal characters include: newline, space, any punctuation characters, digits, and lower case or upper case English letters. (NOTE: Tabs are not legal characters.) OutputThe output of the program should have the last sentence printed out vertically in the leftmost column; the first sentence of the input would subsequently end up at the rightmost column. Sample Input12Rene Decartes once said,&quot;I think, therefore I am.&quot; Sample Output1234567891011121314151617181920212223242526&quot;RIentehiDnekc,arttheesreofnocreesIaiadm,.&quot; 解題說明java程式碼1234567891011121314151617181920212223242526272829import java.util.*;public class Main &#123; public static void main(String[] args) &#123; Scanner in = new Scanner(System.in); List&lt;String&gt; sentence = new ArrayList&lt;&gt;(); int max = 0; while (in.hasNextLine()) &#123; String tmp = in.nextLine(); max = (tmp.length() &gt; max) ? tmp.length() : max; sentence.add(tmp); &#125; for (int i = 0; i &lt; max; i++) &#123; for (int j = sentence.size() - 1; j &gt;= 0; j--) &#123; if (sentence.get(j).length() &gt; i) &#123; System.out.print(sentence.get(j).charAt(i)); &#125; else &#123; System.out.print(&quot; &quot;); &#125; &#125; System.out.println(); &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"}]},{"title":"uva_482：Permutation Arrays","slug":"uva_482","date":"2025-05-05T13:35:53.000Z","updated":"2025-05-05T13:43:39.996Z","comments":true,"path":"2025/05/05/uva_482/","permalink":"http://example.com/2025/05/05/uva_482/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目uDebug 題目說明Time limit: 3.000 seconds 題目In many computer problems, it is necessary to permute data arrays. That is, the data in an array must be re-arranged in some specified order. One way to permute arbitrary data arrays is to specify the permutations with an index array to point out the position of the elements in the new array. Let x be an array that is to be permuted and let x′ be the permuted array. Then, we have the relationship between x and x′ that x′pi &#x3D; xi. InputThe input begins with a single positive integer on a line by itself indicating the number of the casesfollowing, each of them as described below. This line is followed by a blank line, and there is also ablank line between two consecutive inputs.Each input set will contain two lines of numbers. The first line will be an index array p containingthe integers 1 . . . n, where n is the number of integers in the list. The numbers in the first line will havebeen permuted in some fashion. The second line will contain a list numbers in floating point format. OutputFor each test case, the output must follow the description below. The outputs of two consecutive caseswill be separated by a blank line.The output for this program will be the list of floating point numbers from the input set, orderedaccording to the permutation array from the input file. The output numbers must be printed one perline in the same format in which they each appeared in the input file. Sample Input123413 1 232.0 54.7 -2 Sample Output12354.7-232.0 解題說明java程式碼123456789101112131415161718192021222324252627282930313233343536373839404142import java.util.*;public class Main &#123; public static void main(String[] args)&#123; Scanner in = new Scanner(System.in); int count = in.nextInt(); for(int i=0; i&lt;count; i++)&#123; if(i != 0)&#123; System.out.println(); &#125; //讀取空白行直到獨到第一行數字 String tmp = in.nextLine(); while(tmp.length() == 0)&#123; tmp = in.nextLine(); &#125; String[] permute = tmp.split(&quot; &quot;); String num[] = in.nextLine().split(&quot; &quot;); String ans[] = new String[num.length]; // System.out.println(Arrays.toString(permute)); // System.out.println(Arrays.toString(numStr)); //依題目重新排序 for(int j=0; j&lt;permute.length; j++)&#123; ans[Integer.parseInt(permute[j]) - 1] = num[j]; &#125; //印出答案 for(int j=0; j&lt;ans.length; j++)&#123; System.out.println(ans[j]); &#125; &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"}]},{"title":"uva_476：Points in Figures:Rectangles","slug":"uva_476","date":"2025-05-03T12:45:38.000Z","updated":"2025-05-05T13:43:45.090Z","comments":true,"path":"2025/05/03/uva_476/","permalink":"http://example.com/2025/05/03/uva_476/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目 uDebug 題目說明Time limit: 3.000 seconds 題目Given a list of rectangles and a list of points in the x-y plane, determine for each point which figures(if any) contain the point. InputThere will be n(≤ 10) rectangles descriptions, one per line. The first character will designate the typeof figure (“r” for rectangle). This character will be followed by four real values designating the x-ycoordinates of the upper left and lower right corners.The end of the list will be signalled by a line containing an asterisk in column one.The remaining lines will contain the x-y coordinates, one per line, of the points to be tested. Theend of this list will be indicated by a point with coordinates 9999.9 9999.9; these values should not beincluded in the output.Points coinciding with a figure border are not considered inside. OutputFor each point to be tested, write a message of the form:Point i is contained in figure jfor each figure that contains that point. If the point is not contained in any figure, write a message ofthe form:Point i is not contained in any figurePoints and figures should be numbered in the order in which they appear in the input.Note: See the picture on the right for a diagram of these figures and data points. Sample Input1234567891011r 8.5 17.0 25.5 -8.5r 0.0 10.3 5.5 0.0r 2.5 12.5 12.5 2.5*2.0 2.04.7 5.36.9 11.220.0 20.017.6 3.2-5.2 -7.89999.9 9999.9 Sample Output1234567Point 1 is contained in figure 2Point 2 is contained in figure 2Point 2 is contained in figure 3Point 3 is contained in figure 3Point 4 is not contained in any figurePoint 5 is contained in figure 1Point 6 is not contained in any figure 解題說明 矩形：r 右上x 右上y 左下x 左下y 用二維陣列讀取所有矩形 java程式碼12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455import java.util.*;public class Main &#123; public static void main(String[] args)&#123; Scanner in = new Scanner(System.in); Double[][] rectangle = new Double[10][4]; for(int j=0; j&lt;10; j++)&#123; for(int k=0; k&lt;4; k++)&#123; rectangle[j][k] = 0.0; &#125; &#125; int i = 0; //讀入矩形四個頂點 String str = in.next(); while(!(str.equals(&quot;*&quot;)))&#123; for(int j=0; j&lt;4; j++)&#123; rectangle[i][j] = in.nextDouble(); &#125; i++; str = in.next(); //吃掉r &#125; int dotCount = 0; Double x = in.nextDouble(); Double y = in.nextDouble(); while(x != 9999.9 &amp;&amp; y!=9999.9)&#123; dotCount++; in.nextLine(); int found = 0; for(int j=0; j&lt;i; j++)&#123; if(x&gt;rectangle[j][0] &amp;&amp; x&lt;rectangle[j][2] &amp;&amp; y&gt;rectangle[j][3] &amp;&amp; y&lt;rectangle[j][1])&#123; System.out.println(&quot;Point &quot; + dotCount + &quot; is contained in figure &quot; + (j+1)); found = 1; &#125; &#125; if(found == 0)&#123; System.out.println(&quot;Point &quot; + dotCount + &quot; is not contained in any figure&quot;); &#125; x = in.nextDouble(); y = in.nextDouble(); &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"}]},{"title":"uva_10055：Hashmat the Brave Warrior","slug":"uva_10055","date":"2025-05-01T08:11:17.000Z","updated":"2025-05-05T13:43:33.368Z","comments":true,"path":"2025/05/01/uva_10055/","permalink":"http://example.com/2025/05/01/uva_10055/","excerpt":"","text":"題目敘述題目相關連結Online Judge題目uDebug 題目說明Time limit: 3.000 seconds 題目Hashmat is a brave warrior who with his group of young soldiers moves from one place to another tofight against his opponents. Before Fighting he just calculates one thing, the difference between hissoldier number and the opponent’s soldier number. From this difference he decides whether to fight ornot. Hashmat’s soldier number is never greater than his opponent. InputThe input contains two numbers in every line. These two numbers in each line denotes the numbersoldiers in Hashmat’s army and his opponent’s army or vice versa. The input numbers are not greaterthan 232. Input is terminated by ‘End of File’. OutputFor each line of input, print the difference of number of soldiers between Hashmat’s army and hisopponent’s army. Each output should be in seperate line. Sample Input12310 1210 14100 200 Sample Output12324100 解題說明 用 long 距離皆為正所以要取絕對值，可用Math.abs() java程式碼12345678910111213import java.util.*;public class Main &#123; public static void main(String[] args)&#123; Scanner in = new Scanner(System.in); while(in.hasNextLong())&#123; long num1 = in.nextLong(); long num2 = in.nextLong(); System.out.println(Math.abs(num1 - num2)); &#125; in.close(); &#125;&#125;","categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"}]}],"categories":[{"name":"CPE","slug":"CPE","permalink":"http://example.com/categories/CPE/"}],"tags":[{"name":"⭐","slug":"⭐","permalink":"http://example.com/tags/%E2%AD%90/"},{"name":"⭐⭐","slug":"⭐⭐","permalink":"http://example.com/tags/%E2%AD%90%E2%AD%90/"}]}